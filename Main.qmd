---
title: "Main"
format: html
editor: visual
---

```{r loading pac and data clean}
library(tidyverse)
library(Hmisc)
library(haven)

source("Cleaning.r",local = knitr::knit_global())

data <- data[-c(1),]

settingname <- c("Acute care hospital", "Long-term acute care hospital", "Ventilator-capable skilled nursing facility", "Skilled nursing facility/nursing home", "Assisted living facility/adult care home", "Dialysis", "Other",".", "Unknown")

data$setting <- settingname[data$setting]

#separate between screen data and case data
screendata <- data %>% 
  filter(redcap_repeat_instrument == "screening_abstraction")

casedata <- data %>% 
  filter(redcap_repeat_instrument == "case_abstraction")

#getting years into our case data
casedata <- casedata %>% 
  left_join(screendata[,c("screening_id", "year")], by = "screening_id") %>% 
  unite(year, c("year.x", "year.y"), na.rm = TRUE)

data <- rbind(screendata, casedata)

#pivot long
screendata <- screendata %>% 
  pivot_longer(cols = starts_with("screen_type"),
                            names_to = "screening_type",
                            values_to = "test",
                            values_transform = list(test = as.integer))

```

#What is the proportion of initial screenings that identify positives (of the same organism or carbapenemase)

```{r}
#counts for 2024
data2024 <- data %>% 
  filter(year == 2024)

tablescreen <- data2024 %>% 
  filter(redcap_repeat_instrument == "screening_abstraction") %>% 
  summarise(screencount=n())

table2024 <- data2024 %>%
  group_by(redcap_repeat_instrument) %>% 
  summarise(totalpos = n(),
            distinctscreens = n_distinct(screening_id)) %>% 
  filter(redcap_repeat_instrument == "case_abstraction")

table2024 <- cbind(tablescreen, table2024)

table2024 <- table2024 %>% 
  mutate(percentage = (distinctscreens/screencount)*100) %>% 
  select(-redcap_repeat_instrument)

table2024
#same org
#create column that classifies cases based on whether a positive was id'd
#prop <- screendata %>% 
#  mutate(initialscreenid = case_when(pps_num_p1 == 0 ~ "No positives within PPS",
#                                     pps_num_p1 > 0 ~ "Positive within PPS"))
#
#get counts of each class, create frequency column
#prop %>% 
#  group_by(initialscreenid) %>% 
#  summarise(n = n()) %>% 
#  mutate(freq = n/sum(n))

#for any org

#prop <- screendata %>% 
#  mutate(initialscreenidany = case_when(pps_totalpos_p1 == 0 ~ "No positives within PPS",
#                                        pps_totalpos_p1 > 0 ~ "Positive within PPS"))

#prop %>% 
#  group_by(initialscreenidany) %>% 
#  summarise(n = n()) %>% 
#  mutate(freq = n/sum(n))





```